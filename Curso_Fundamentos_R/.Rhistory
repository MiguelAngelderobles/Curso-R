numeros <- 1:100
edades = 20:100
edades = 20:100
edades = 20:100
sin(numeros)
edades
plot(edades)
numero
numero
num = 4
val
val
val = FALSE
val
cad = "fundamentos R"
cad
class(num)
class(val)
class(cad)
8+9
10-2
10/2
4^2
# Modulo
11%%5
#Cociente Decimal
11 %/% 5
#Prioridad
10 * 2 + 10
(((10 - 5)/(2 + 3)) * 2) ^ 2
2 > 5
2 < 5
2 == 2
2 != 5
2 < = 5
2 <= 5
2 >= 5
source('~/Escritorio/CursosR/Curso_Fundamentos_R/Scripts/Session_2.R', echo=TRUE)
b & c
a | b
!a
capital = 500
interes = 200
capital > 1000 | interes < 2000
capital > 10000 | interes < 2000
edad = 30
10 < 30 > 50
10 < edad & edad > 50
10 < edad & edad < 50
10 <= edad & edad <= 50
# install.packages("quantmod")
library(quantmod)
library(tools, lib.loc = "/usr/lib/R/library")
library(tcltk, lib.loc = "/usr/lib/R/library")
library(survival, lib.loc = "/usr/lib/R/library")
library(stats4, lib.loc = "/usr/lib/R/library")
library(splines, lib.loc = "/usr/lib/R/library")
library(spatial, lib.loc = "/usr/lib/R/library")
library(rpart, lib.loc = "/usr/lib/R/library")
library(nnet, lib.loc = "/usr/lib/R/library")
library(parallel, lib.loc = "/usr/lib/R/library")
library(mgcv, lib.loc = "/usr/lib/R/library")
library(Matrix, lib.loc = "/usr/lib/R/library")
library(MASS, lib.loc = "/usr/lib/R/library")
library(lattice, lib.loc = "/usr/lib/R/library")
library(KernSmooth, lib.loc = "/usr/lib/R/library")
library(foreign, lib.loc = "/usr/lib/R/library")
library(compiler, lib.loc = "/usr/lib/R/library")
library(codetools, lib.loc = "/usr/lib/R/library")
library(cluster, lib.loc = "/usr/lib/R/library")
library(class, lib.loc = "/usr/lib/R/library")
library(boot, lib.loc = "/usr/lib/R/library")
library(yaml)
library(xtable)
library(backports)
library(base64enc)
library(BH)
library(bslib)
library(cachem)
library(checkmate)
library(commonmark)
library(digest)
library(crayon)
library(ellipsis)
library(evaluate)
library(fastmap)
library(fs)
library(glue)
library(htmltools)
library(highr)
library(htmlwidgets)
library(httpuv)
library(jquerylib)
library(jsonlite)
library(knitr)
library(later)
library(learnr)
library(lifecycle)
library(magrittr)
library(markdown)
library(mime)
library(promises)
library(R6)
library(rappdirs)
library(Rcpp)
library(renv)
library(rlang)
library(rmarkdown)
library(rprojroot)
library(sass)
library(shiny)
library(sourcetools)
library(stringi)
library(stringr)
library(tinytex)
library(xfun)
library(withr)
# install.packages("quantmod")
library(quantmod)
# install.packages("quantmod")
install.packages("quantmod")
# cargar del paquete en el mismo ambiente
library(quantmod)
install.packages("tseries")
library(tseries)
install.packages("MCMCpack")
library(MCMCpack)
tabla <- list(X = c(-40,-21,0,12,2,8), Y = c(4,33,30,3,5,9))
bayes <- MCMCregress(Y~X,data = tabla )
summary(bayes)
plot(bayes)
View(tabla)
bayes_clasica <- lm(Y~X , data = tabla)
summary(bayes_clasica)
getSymbols("AUDNZD=X",src = "yahoo",from = "2017-02-18")
getSymbols("AUDUSD=X",src = "yahoo",from = "2017-02-18")
AUDNZD=`AUDNZD=X`[,4]
AUDUSD=`AUDUSD=X`[,4]
X=as.numeric(AUDNZD)
Y=as.numeric(AUDUSD)
bayes <- MCMCregress(Y~X)
summary(bayes)
plot(bayes)
bayes_clasica <- lm(Y~X)
summary(bayes_clasica)
plot(bayes_clasica)
# Modulo
11 %% 5
#Cociente Decimal
11 %/% 5
class(num)
cuota = 1000
cuota != 100
peso = 60
peso < 100 & peso == 60
source('~/Escritorio/CursosR/Curso_Fundamentos_R/Scripts/Session_2.R', echo=TRUE)
source('~/Escritorio/CursosR/Curso_Fundamentos_R/Scripts/Session_2.R', echo=TRUE)
num_pares = c(2,4,6,8)
num_impares = c(1,3,5,7)
num_impares
numerosCombinados = c(num_pares,num_impares)
numerosCombinados
numerosCombOrdenados= c(numerosCombinados)
numerosCombOrdenados
numerosCombOrdenados= sort(numerosCombinados)
numerosCombOrdenados
class(numerosCombOrdenados)
numeros_naturales = 1:100
numeros_naturales
numeros_naturales
letras = letters[1:10]
letras
vector_uno_a_veinte = 1:20
vector_uno_a_veinte
numero_nat_doble = numeros_naturales * 2
numero_nat_doble
numero_nat_div = numeros_naturales / 2
numero_nat_div
numero_nat_mas_cinco = numeros_naturales + 5
numero_nat_mas_cinco
numeros_naturales > 8
numeros_naturales[numeros_naturales > 8]
numero_nat_doble == 2
numero_nat_div == 2
numero_nat_div[numero_nat_div == 2]
vocales
vocales
vocales
vocales = c("a","e","i","o","u")
vocales
vocalesAux = vocales[vocales != "a"]
vocales
vocalesAux
num3 = 1:20
num3
num4 = num3>18
num4
num4 = num3[num3 > 18]
num4
num5= num3[num3 %% 5 == 0]
# Acceso a los elementos del vector
alfabeto = letters[1:6]
alfabeto
alfabeto[1]
# NO COMIENZA DESDE 0  COMIENZA DESDE " 1 "
alfabeto[3]
alfabeto[c(3,6)]
alfabeto[c(2:5)]
alfabeto[2:5]
alfabeto[-2]
animales = c("gato","perro","gato", "gato")
animales2 = factor(animales)
animales2
plot(animales)
plot(animales2)
level_animales = c("perro","gato")
animales2 = factor(animales,level = level_animales)
plot(animales2)
animales = c("gato","perro","gato", "gato")
animales2 = factor(animales)
animales2
plot(animales2)
level_animales = c("perro","gato")
animales3 = factor(animales,level = level_animales)
plot(animales3)
animales3
edades = c(15,17,16,16,15,17,18,15,16,15)
max(edades)
min(edades)
edades = c(15,17,16,16,15,17,18,14,16,15)
max(edades)
min(edades)
range(edades)
mean(edades)
median(edades)
quantile(edades,0.25)
quantile(edades,0.50)
quantile(edades,0.75)
var(edades)
sd(edades)
summary(edades)
#PRACTICA
data_hijos = c(0,0,1,1,1,1,1,2,2,2,3,3,3,3,4,4,4,5,5,5,5)
Datas
data_hijos
mean(data_hijos)
median(data_hijos)
# o
quantile(data_hijos,0.50)
estudiantes = c(51, 60, 55, 30, 70,, 80,100, 50, 60 , 60 ,90, 20, 60, 30, 90, 50, 60, 30, 25, 25, 25, 50, 60, 60, 60, 51, 51, 51,  51, 40)
estudiantes = c(51, 60, 55, 30, 70, 80,100, 50, 60 , 60 ,90, 20, 60, 30, 90, 50, 60, 30, 25, 25, 25, 50, 60, 60, 60, 51, 51, 51,  51, 40)
estudiantes
max(estudiantes)
# min estudiantes
min(estudiantes)
# promedios estudiantes
mean(estudiantes)
# mediana de estudiantes
median(estudiantes)
# sd
sd(estudiantes)
#Quantile (estudiantes,0.75)
quantile(estudiantes,0.75)
