# Prueba de variables y prueba  -------------------------------------------


numeros <- 1:100
edades = 20:100
'control+enter para ejecutar y tab completo comandos, 
alt flecha para mover '
'hashtag para comentar #, control+shift+c para comentar lineas'
# hola 
# maquinola

edades
plot(edades)
sin(numeros)


# Tipos de datos ----------------------------------------------------------

'numerico'
num = 4
num

'logico'
val = FALSE
val

'cadena de caracteres'
cad = "fundamentos R"
cad

'verificar el tipo de dato'
class(num)
class(val)
class(cad)

# Operadores Aritmeticos --------------------------------------------------

8+9
10-2
10/2
4^2

# Modulo
11 %% 5

#Cociente Decimal
11 %/% 5 

#Prioridad
10 * 2 + 10 
(((10 - 5)/(2 + 3)) * 2) ^ 2


# Operadores de Comparacion -----------------------------------------------

2 > 5

2 < 5

2 <= 5

2 >= 5

2 == 2

2 != 5

# Operadores Logicos ------------------------------------------------------

a = 2 > 5

b = 2 < 5

c = 2 <= 5

d = 2 >= 5

e = 2 == 2

f = 2 != 5

b & c

a | b

!a

#verificar si el capital = 500 es mayor a 10000 o el interes = 200 es menor a 2000

capital = 500

interes = 200

capital > 10000 | interes < 2000

# verificar si edad = 30 esta entre los rangos de 10 y 50

edad = 30

10 <= edad & edad <= 50 

#verificar si cuota = 1000 es distinto de 100

cuota = 1000

cuota != 100

#verificar si peso = 600 es menor a 100 y igual 60

peso = 60

peso < 100 & peso == 60


# Array Unidimensionales - Vectores ---------------------------------------


c(1,2,3,4,5)

c(TRUE,FALSE,TRUE,FALSE)

c("Maria","Rosmery","Elias")

#Nota

c("La Paz", 2, 3) # lo convierte en String

c("La Paz",TRUE, 3) # lo convierte en String

c(FALSE,3,4) # Lo convierte en INT

num_pares = c(2,4,6,8)
num_impares = c(1,3,5,7)

num_impares

# Combinar Vectores

numerosCombinados = c(num_pares,num_impares)

numerosCombinados

# Ordenar vector

numerosCombOrdenados= sort(numerosCombinados)
numerosCombOrdenados

#vertificar el tipo de datos

class(numerosCombOrdenados)

# ":" permite crear un vector con una sentencia numerica

numeros_naturales = 1:100

numeros_naturales

letras = letters[1:10]
letras

vector_uno_a_veinte = 1:20

vector_uno_a_veinte

# Operadores sobre vectores

numero_nat_doble = numeros_naturales * 2

numero_nat_doble

numero_nat_div = numeros_naturales / 2

numero_nat_div

numero_nat_mas_cinco = numeros_naturales + 5

numero_nat_mas_cinco

#Filtrando los valores del vector

numeros_naturales > 8

numeros_naturales[numeros_naturales > 8]

numero_nat_div == 2

numero_nat_div[numero_nat_div == 2]

# Filtrando los valores del vector de cadenas

vocales = c("a","e","i","o","u")

vocales 

vocalesAux = vocales[vocales != "a"]

vocalesAux

# Practica Vectores

num3 = 1 : 20

num3

#1- Encontrar todos los valores mayores estrictos a 18 y almacenar en la variable num4

num4 = num3 > 18
num4

num4 = num3[num3 > 18]

num4

#2- Encontrar todos los multiplos de 5 y almacenar en num5
## resto div entre 5 %%

num5= num3[num3 %% 5 == 0]

# Acceso a los elementos del vector 

alfabeto = letters[1:6]

# NO COMIENZA DESDE 0  COMIENZA DESDE " 1 "
alfabeto[3]

alfabeto[c(3,6)]

alfabeto[2:5]

alfabeto[-2]



# TIpo de datos "Factores" ------------------------------------------------

animales = c("gato","perro","gato", "gato")

animales2 = factor(animales)

animales2

#plot(animales) == err

plot(animales2)

level_animales = c("perro","gato")

animales3 = factor(animales,level = level_animales)

animales3 

plot(animales3)


# Funciones definidas en R ------------------------------------------------

edades = c(15,17,16,16,15,17,18,14,16,15)

# max(x) 

max(edades)

# min(x)

min(edades)

# range(x) -> max y min juntos

range(edades)

# Cual es la media de los estudiantes de los encuestados (  mean(x) )

mean(edades)

# mediana( median(x) )

median(edades)

# Quantile (x,y) -> son la division de cuatro grupos "y" puede ser Q1 = 25% Q2 = 50% Q3 = 75% Total 100%

#Q1 = 25%
quantile(edades,0.25)
#Q2 = 50%
quantile(edades,0.50)
#Q3 = 75%
quantile(edades,0.75)

# var(x)-> valor que varia con respecto a la media elevado al cuadrado 

var(edades)

#sd(x) -> desviacion estandar , en cuanto difieren de la media

sd(edades)

# summary(x) -> devuelve todas las f(x)s anteriores en un sumario,except var y sd

summary(edades)

#PRACTICA
data_hijos = c(0,0,1,1,1,1,1,2,2,2,3,3,3,3,4,4,4,5,5,5,5)

data_hijos

#sacar promedios de hujos
mean(data_hijos)

#cual es la media de hijos
median(data_hijos) 
# o 
quantile(data_hijos,0.50)


# tareas--------

estudiantes = c(51, 60, 55, 30, 70, 80,100, 50, 60 , 60 ,90, 20, 60, 30, 90, 50, 60, 30, 25, 25, 25, 50, 60, 60, 60, 51, 51, 51,  51, 40)

estudiantes

# max estudiantes

max(estudiantes)
# min estudiantes
min(estudiantes)
# promedios estudiantes
mean(estudiantes)
# mediana de estudiantes
median(estudiantes)
# sd
sd(estudiantes)
#Quantile (estudiantes,0.75)
quantile(estudiantes,0.75)
